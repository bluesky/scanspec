[build-system]
requires = ["setuptools>=64", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "scanspec"
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
description = "Specify step and flyscan paths in a serializable, efficient and Pythonic way"
dependencies = [
    "numpy>=1.19.3",
    "click==8.1.7",
    "pydantic<3.0",
    "typing_extensions",
]
dynamic = ["version"]
license.file = "LICENSE"
readme = "README.md"
requires-python = ">=3.7"

[project.optional-dependencies]
# Plotting
plotting = [
    # make sure a python 3.9 compatible scipy and matplotlib are selected
    "scipy>=1.5.4",
    "matplotlib>=3.2.2",
]
# REST service support
service = ["fastapi==0.110.0", "uvicorn"]
# For development tests/docs
dev = [
    # This syntax is supported since pip 21.2
    # https://github.com/pypa/pip/issues/10393
    "scanspec[plotting]",
    "scanspec[service]",
    "copier",
    "mypy",
    "myst-parser",
    "pipdeptree",
    "pre-commit",
    "pydata-sphinx-theme>=0.12",
    "pytest",
    "pytest-cov",
    "ruff",
    "sphinx-autobuild",
    "sphinx-copybutton",
    "sphinx-design",
    "sphinxcontrib-openapi",
    "tox-direct",
    "types-mock",
    "httpx",
    "myst-parser",
]

[project.scripts]
scanspec = "scanspec.cli:cli"

[project.urls]
GitHub = "https://github.com/dls-controls/scanspec"

[[project.authors]] # Further authors may be added by duplicating this section
email = "tom.cobb@diamond.ac.uk"
name = "Tom Cobb"


[tool.setuptools_scm]
write_to = "src/scanspec/_version.py"

[tool.mypy]
ignore_missing_imports = true # Ignore missing stubs in imported modules

[tool.pytest.ini_options]
# Run pytest with all our checkers, and don't spam us with massive tracebacks on error
addopts = """
    --tb=native -vv --doctest-modules --doctest-glob="*.rst"
    """
# https://iscinumpy.gitlab.io/post/bound-version-constraints/#watch-for-warnings
filterwarnings = "error"
# Doctest python code in docs, python code in src docstrings, test functions in tests
testpaths = "docs src tests"

[tool.coverage.run]
data_file = "/tmp/scanspec.coverage"

[tool.coverage.paths]
# Tests are run from installed location, map back to the src directory
source = ["src", "**/site-packages/"]

# tox must currently be configured via an embedded ini string
# See: https://github.com/tox-dev/tox/issues/999
[tool.tox]
legacy_tox_ini = """
[tox]
skipsdist=True

[testenv:{pre-commit,type-checking,tests,docs}]
# Don't create a virtualenv for the command, requires tox-direct plugin
direct = True
passenv = *
allowlist_externals =
    pytest
    pre-commit
    mypy
    sphinx-build
    sphinx-autobuild
commands =
    pre-commit: pre-commit run --all-files {posargs}
    type-checking: mypy src tests {posargs}
    tests: pytest --cov=scanspec --cov-report term --cov-report xml:cov.xml {posargs}
    docs: sphinx-{posargs:build -EW --keep-going} -T docs build/html
"""

[tool.ruff]
src = ["src", "tests"]
line-length = 88

[tool.ruff.lint]
extend-select = [
    "B",  # flake8-bugbear - https://docs.astral.sh/ruff/rules/#flake8-bugbear-b
    "C4", # flake8-comprehensions - https://docs.astral.sh/ruff/rules/#flake8-comprehensions-c4
    "E",  # pycodestyle errors - https://docs.astral.sh/ruff/rules/#error-e
    "F",  # pyflakes rules - https://docs.astral.sh/ruff/rules/#pyflakes-f
    "W",  # pycodestyle warnings - https://docs.astral.sh/ruff/rules/#warning-w
    "I",  # isort - https://docs.astral.sh/ruff/rules/#isort-i
    "UP", # pyupgrade - https://docs.astral.sh/ruff/rules/#pyupgrade-up
]
# We use pydantic, so don't upgrade to py3.10 syntax yet
pyupgrade.keep-runtime-typing = true
ignore = [
    "B008", # We use function calls in service arguments
]
