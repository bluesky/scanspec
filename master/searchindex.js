Search.setIndex({"docnames": ["explanations", "explanations/technical-terms", "explanations/why-squash-can-change-path", "explanations/why-stack-frames", "genindex", "how-to", "how-to/iterate-a-spec", "how-to/serialize-a-spec", "index", "reference", "reference/api", "reference/contributing", "reference/rest_api", "tutorials", "tutorials/creating-a-spec", "tutorials/installation", "tutorials/rest-service"], "filenames": ["explanations.md", "explanations/technical-terms.rst", "explanations/why-squash-can-change-path.rst", "explanations/why-stack-frames.rst", "genindex.md", "how-to.md", "how-to/iterate-a-spec.rst", "how-to/serialize-a-spec.rst", "index.md", "reference.md", "reference/api.rst", "reference/contributing.rst", "reference/rest_api.rst", "tutorials.md", "tutorials/creating-a-spec.rst", "tutorials/installation.md", "tutorials/rest-service.rst"], "titles": ["Explanations", "Technical Terms", "Why Squash (and Mask) can change the Path", "Why create a stack of Frames?", "Index", "How-to Guides", "How to Iterate a Spec", "How to Serialize and Deserialize a Spec", "scanspec", "Reference", "API", "Contributing to the project", "REST API", "Tutorials", "Creating a Scan Spec", "Installation", "Running a REST service for generating points"], "terms": {"how": [0, 10, 14, 16], "work": [0, 6, 8], "why": [0, 1, 6, 8, 10], "wai": [0, 6, 8, 10], "technic": [0, 8, 9, 10], "term": [0, 8, 10], "creat": [0, 1, 2, 6, 8, 10, 13, 16], "stack": [0, 2, 6, 8, 10], "frame": [0, 6, 8, 10, 12, 14], "squash": [0, 8, 10], "mask": [0, 3, 8, 10], "can": [0, 1, 3, 6, 7, 8, 10, 11, 12, 14, 15, 16], "chang": [0, 3, 8, 10, 11], "path": [0, 3, 6, 8, 10, 14, 15], "thi": [1, 6, 7, 10, 14, 15, 16], "page": [1, 2], "draw": [1, 10], "togeth": [1, 2, 3, 10], "some": [1, 2, 3, 14], "us": [1, 3, 6, 7, 8, 10, 14, 15, 16], "throughout": 1, "document": [1, 10, 11, 12], "consid": [1, 2, 3], "1d": [1, 14], "line": [1, 2, 3, 6, 7, 8, 10, 16], "scan": [1, 2, 3, 8, 10, 12, 13, 16], "A": [1, 2, 3, 6, 10, 12], "fix": [1, 10], "refer": [1, 3, 8], "i": [1, 2, 3, 10, 11, 12, 14, 15, 16], "e": [1, 10, 12], "motor": [1, 2, 6], "durat": [1, 8, 10], "In": [1, 6, 16], "diagram": 1, "abov": [1, 2, 3, 10, 14], "x": [1, 2, 3, 6, 7, 8, 10, 14, 16], "spec": [1, 2, 3, 5, 8, 12, 13], "ax": [1, 8, 10], "return": [1, 10, 12, 16], "should": [1, 3, 6, 10, 11, 14, 15, 16], "given": [1, 8, 10, 14], "singl": [1, 3, 6, 10], "multidimension": 1, "locat": 1, "space": [1, 10], "each": [1, 2, 3, 6, 8, 10, 12, 14, 16], "made": 1, "up": [1, 10, 11, 16], "lower": [1, 3, 6, 10, 12, 14], "midpoint": [1, 3, 8, 10, 12, 14], "upper": [1, 3, 6, 8, 10, 12, 14], "ar": [1, 2, 3, 6, 8, 10, 11, 12, 14, 16], "avail": 1, "an": [1, 2, 7, 8, 10, 12, 14], "inter": 1, "from": [1, 2, 3, 6, 7, 8, 10, 12, 15], "arrai": [1, 3, 6, 10, 12], "vector": 1, "three": 1, "thei": [1, 2, 3, 10], "describ": [1, 10], "trajectori": 1, "taken": [1, 10, 14], "while": [1, 11], "detector": [1, 2], "activ": [1, 15], "fly": [1, 3, 8, 10], "denot": 1, "differ": [1, 10], "colour": [1, 10, 14], "section": 1, "repeat": [1, 2, 10], "possibli": 1, "snake": [1, 3, 6, 8, 10], "seri": [1, 10], "along": [1, 3, 10], "number": [1, 2, 3, 10, 11], "whole": 1, "produc": [1, 2, 6, 8, 10, 12], "object": [1, 2, 3, 6, 10], "grid": [1, 3, 6, 8, 10], "would": [1, 2, 3, 14, 16], "two": [1, 2, 3, 10, 12, 14], "calcul": [1, 3, 6, 8, 10, 12], "consum": [1, 6, 8, 10], "rout": [1, 10], "through": [1, 2, 6, 8, 10, 11], "_stack_": 1, "If": [1, 2, 3, 10, 11, 14, 15], "wa": [1, 7], "within": [1, 2, 10, 14], "anoth": [1, 2, 10], "length": [1, 8, 10], "5": [1, 3, 6, 7, 8, 10, 14, 16], "contain": [1, 3, 6, 10, 11], "15": 1, "list": [1, 2, 3, 10], "which": [2, 3, 8, 10, 16], "when": [2, 3, 6, 8, 10, 11], "everi": [2, 10], "other": [2, 10], "run": [2, 6, 8, 10, 11, 13, 15], "revers": [2, 10], "merg": [2, 10], "mai": [2, 6, 10, 12, 14], "compar": 2, "unsquash": 2, "version": [2, 10, 12], "nest": [2, 3, 10], "slower": [2, 3, 10], "so": [2, 3, 6, 10, 15], "more": [2, 5, 8, 10], "than": [2, 8, 10], "onc": [2, 3, 6, 10], "time": [2, 3, 10, 11], "where": [2, 6, 10, 14], "case": 2, "The": [2, 3, 10, 11, 12, 14, 15, 16], "illustr": 2, "below": [2, 12], "onli": [2, 10, 14], "check_path_chang": [2, 10], "fals": [2, 6, 10], "pass": [2, 10, 16], "otherwis": [2, 10, 12], "fail": 2, "valueerror": 2, "take": [2, 3, 6], "set": [2, 10, 11, 12, 14], "slowest": [2, 3, 10], "move": [2, 3, 6, 10], "second": [2, 3, 10], "origin": 2, "make": [2, 3, 11, 14], "user": [2, 5, 8, 13], "had": 2, "demand": 2, "alwai": 2, "one": [2, 6, 10, 11, 14], "direct": 2, "could": [2, 6, 14], "invalid": 2, "For": [2, 3, 6, 10, 14], "exampl": [2, 6, 7, 8, 10, 14, 16], "non": [2, 3, 10], "y": [2, 3, 6, 7, 8, 10, 14, 16], "z": [2, 10, 14], "scanspec": [2, 3, 6, 7, 12, 14, 15, 16], "import": [2, 3, 6, 7, 8, 10, 14], "plot": [2, 8, 15, 16], "plot_spec": [2, 10, 14], "0": [2, 3, 6, 7, 8, 10, 12, 14, 16], "1": [2, 3, 6, 7, 8, 10, 14], "3": [2, 3, 6, 7, 8, 10, 14, 15, 16], "sourc": [2, 8, 10, 14, 15], "code": [2, 10, 12, 14, 16], "png": [2, 10, 14], "hire": [2, 10, 14], "pdf": [2, 10, 14], "we": [2, 3, 6, 7, 10, 11, 14, 16], "must": [2, 10], "even": 2, "order": [2, 10], "abl": 2, "keep": [2, 6], "jump": 2, "after": [2, 10, 12], "iter": [2, 3, 5, 8, 10, 14], "between": [2, 10, 12, 14], "first": [2, 3, 6, 10, 14], "apart": 2, "invari": 2, "mean": [2, 3, 10], "write": [2, 3], "data": [2, 3, 10], "reshap": [2, 3], "vd": [2, 3], "dimension": [2, 3, 8], "unfortun": 2, "neg": 2, "stride": 2, "support": [2, 10], "strategi": [2, 3], "need": [2, 3, 10, 15], "flag": 2, "explicitli": 2, "allow": [2, 16], "result": [2, 14], "potenti": 2, "surpris": 2, "tell": 3, "you": [3, 10, 11, 14, 15, 16], "paramet": [3, 7, 10, 16], "give": [3, 6, 16], "point": [3, 8, 10, 12, 13, 15], "let": [3, 7], "actual": [3, 10], "execut": [3, 6, 10], "interpret": [3, 10], "fastest": [3, 10], "faster": [3, 10], "per": [3, 10, 12], "posit": [3, 8, 10], "axi": [3, 6, 7, 10, 12, 16], "travers": [3, 10], "4": [3, 7, 8, 10, 14, 16], "6": [3, 7, 10, 14, 16], "2": [3, 6, 7, 8, 10], "len": [3, 6, 8, 10], "8": [3, 8, 10, 15], "product": [3, 7, 8, 10, 14, 16], "have": [3, 6, 10, 11], "same": [3, 8, 10, 11], "size": [3, 6, 10, 12], "outer": [3, 7, 10, 16], "inner": [3, 7, 10, 14, 16], "18": 3, "all": [3, 10, 11], "most": [3, 10, 11, 16], "compact": 3, "represent": [3, 10], "imagin": 3, "100x2000x2000": 3, "just": 3, "100": [3, 11], "2000": 3, "float64": 3, "32": 3, "8kb": 3, "ram": 3, "our": [3, 14], "form": [3, 10], "2gb": 3, "itself": 3, "like": [3, 8, 10, 14, 16], "over": [3, 8], "long": [3, 10], "period": 3, "sens": 3, "save": 3, "memori": [3, 6], "stop": [3, 7, 10, 16], "regular": 3, "caus": 3, "circl": [3, 8, 10, 14], "won": 3, "t": [3, 11], "depend": 3, "ani": [3, 10, 11, 12, 15], "its": [3, 7, 10], "specifi": [3, 8, 10], "written": 3, "disk": 3, "simplest": 3, "simpli": 3, "imag": 3, "setpoint": 3, "reader": 3, "pick": 3, "out": [3, 6], "requir": [3, 10, 15], "howev": 3, "inform": [3, 6, 10, 11], "hold": 3, "until": 3, "turn": [3, 7], "destroi": 3, "perform": [3, 8, 10], "reason": [3, 6], "advis": 3, "hdf": 3, "see": [3, 6, 10, 12, 14, 16], "detail": 3, "practic": [5, 8], "step": [5, 6, 8, 10, 12], "experienc": [5, 8], "serial": [5, 8, 10, 14], "deseri": [5, 8, 10, 14], "specif": [6, 10], "To": [6, 14, 16], "few": 6, "conduct": 6, "get": [6, 14], "method": [6, 10], "d": [6, 16], "print": [6, 8, 10], "simpl": [6, 14], "particularli": 6, "numpi": 6, "unpack": 6, "dictionari": [6, 7, 10], "bound": [6, 8, 10, 12, 14], "small": 6, "enough": 6, "fit": [6, 11], "machin": 6, "entir": 6, "segment": 6, "75": [6, 10], "25": 6, "instanc": 6, "shot": 6, "view": 6, "new": [6, 8, 10, 11, 13], "intermedi": 6, "mani": [6, 10], "wrapper": 6, "them": [6, 8, 10, 14], "also": [6, 8, 10, 11, 15], "maximum": [6, 10, 12], "core": [6, 8], "chunk": [6, 8, 10], "subset": 6, "start": [6, 7, 8, 10, 13, 14, 16], "num": [6, 7, 8, 10, 16], "someth": [6, 11], "turnaround": [6, 10, 14], "back": [6, 7], "forth": 6, "check": [6, 10, 11], "attribut": 6, "true": [6, 10], "sai": 6, "previou": [6, 10], "On": 6, "veri": 6, "last": [6, 10, 14], "insert": [6, 10], "row": 6, "ha": [7, 14, 15], "repr": 7, "show": [7, 14, 16], "instanti": 7, "recurs": [7, 10], "type": [7, 10, 14, 15, 16], "flyscan": [8, 10], "combin": [8, 10, 14], "spiral": [8, 10], "option": 8, "zip": [8, 10, 14], "concat": [8, 10], "compos": 8, "multipl": [8, 10], "region": 8, "restrict": [8, 10], "rather": 8, "expand": [8, 10], "reconstruct": 8, "server": 8, "It": [8, 10, 15], "cycler": 8, "dl": [8, 10, 15], "control": [8, 10, 15], "pypi": 8, "pip": [8, 15], "instal": [8, 13], "http": [8, 16], "github": [8, 11, 15], "io": 8, "releas": [8, 9, 15], "2d": [8, 10], "insid": [8, 10], "spend": [8, 10, 11], "12": [8, 10, 16], "10": [8, 10, 16], "radiu": [8, 10], "look": [8, 10], "directli": 8, "conveni": [8, 10], "1818181818181817": 8, "8333333333333333": 8, "7222222222222222": 8, "44": 8, "30": [8, 10], "ndarrai": [8, 10], "split": 8, "four": 8, "categori": 8, "access": 8, "link": 8, "top": [8, 10], "bar": 8, "tutori": [8, 14, 16], "rest": [8, 9, 10, 13, 15], "servic": [8, 12, 13, 15], "gener": [8, 10, 12, 13, 15], "typic": [8, 10, 13], "usag": [8, 13], "here": [8, 13, 14], "guid": 8, "explan": 8, "api": [8, 9, 16], "contribut": [8, 9], "project": [8, 9], "index": [8, 9, 10], "materi": [8, 9], "includ": [8, 9, 10, 14], "note": [8, 9], "level": 10, "modul": 10, "packag": 10, "class": 10, "subclass": 10, "visual": 10, "defin": [10, 14], "queri": 10, "field": 10, "structur": 10, "midpointsrespons": [10, 12], "__version__": 10, "str": 10, "versiongit": 10, "if_instance_do": 10, "cl": 10, "func": 10, "callabl": 10, "notimpl": 10, "helper": 10, "implement": 10, "oper": [10, 14], "overload": 10, "variabl": [10, 14], "alia": 10, "typevar": 10, "axespoint": 10, "map": [10, 16], "float": 10, "g": 10, "xmotor": 10, "ymotor": 10, "dict": 10, "none": 10, "gap": [10, 12], "np": 10, "base": 10, "repres": 10, "dure": 10, "suppli": 10, "linear": 10, "part": 10, "whether": [10, 12], "element": 10, "These": [10, 14], "present": 10, "extract": 10, "indic": [10, 12, 14], "calculate_gap": 10, "provid": 10, "modulo": 10, "recalcul": 10, "bool": 10, "concaten": 10, "self": 10, "both": [10, 12], "necessarili": 10, "inherit": 10, "reorder": 10, "forc": 10, "frames2": 10, "share": [10, 11], "fx": 10, "fy": 10, "7": 10, "snakedfram": 10, "altern": 10, "repetit": 10, "classmethod": 10, "from_fram": 10, "extend": 10, "past": 10, "gap_between_fram": 10, "frames1": 10, "end": [10, 11, 14], "squash_fram": 10, "output": [10, 14, 16], "input": [10, 14], "int": 10, "next": 10, "end_index": 10, "dtype": 10, "int64": 10, "better": 10, "instead": [10, 11], "mp": 10, "p": 10, "properti": 10, "discriminated_union_of_subclass": 10, "super_cl": 10, "discrimin": 10, "config": 10, "baseconfig": 10, "add": 10, "union": 10, "identifi": 10, "raw": 10, "json": [10, 16], "name": [10, 16], "param": 10, "valid": [10, 12], "pars": 10, "pydant": 10, "parse_obj_a": 10, "express": 10, "abc": 10, "abstractmethod": 10, "def": 10, "dataclass": 10, "left": 10, "right": 10, "subtract": 10, "intliter": 10, "valu": 10, "my_sum": 10, "assert": 10, "13": 10, "superclass": 10, "determin": 10, "default": 10, "decor": 10, "necessari": 10, "function": [10, 14], "strictconfig": 10, "configur": 10, "static": 10, "special": 10, "kei": 10, "serializ": 10, "abstract": 10, "baseclass": 10, "operand": 10, "integ": 10, "wrap": 10, "exclud": 10, "outsid": 10, "shape": 10, "tupl": 10, "final": 10, "simplifi": 10, "tandem": 10, "obj": 10, "fieldinfo": 10, "pydanticundefin": 10, "descript": [10, 12], "Will": 10, "extra": [10, 15], "liter": 10, "entireti": 10, "min": 10, "consecut": 10, "empti": 10, "want": [10, 11, 14, 16], "do": [10, 14, 15, 16], "There": [10, 16], "arrow": [10, 14], "hand": 10, "appear": 10, "earlier": 10, "later": [10, 15], "parallel": 10, "individu": 10, "l2": 10, "l1": 10, "r1": 10, "modifi": 10, "fall": 10, "push": 10, "down": 10, "avoid": 10, "bracket": 10, "span": 10, "join": 10, "dimens": 10, "what": [10, 11, 14], "linearli": 10, "extrem": 10, "motion": [10, 14], "x_axi": 10, "y_axi": 10, "x_start": 10, "centr": [10, 14], "y_start": 10, "x_rang": 10, "width": 10, "y_rang": 10, "rotat": 10, "much": 10, "angl": 10, "archimedean": 10, "height": 10, "50": 10, "dr": 10, "ring": 10, "equal": 10, "continu": 10, "combinationof": 10, "unionof": [10, 14], "intersectionof": [10, 14], "differenceof": [10, 14], "symmetricdifferenceof": [10, 14], "rang": 10, "rectangl": 10, "polygon": 10, "ellips": 10, "either": 10, "axis_set": 10, "overlap": 10, "get_mask": 10, "ones": 10, "b": 10, "r": 10, "match": 10, "minimum": [10, 12], "inclus": 10, "max": 10, "x_min": 10, "y_min": 10, "x_max": 10, "y_max": 10, "clockwis": 10, "xy": 10, "x_vert": 10, "nx1": 10, "coordin": [10, 16], "vertic": 10, "min_len": 10, "y_vert": 10, "x_middl": 10, "central": 10, "y_middl": 10, "exc_min": 10, "9": 10, "x_radiu": 10, "y_radiu": 10, "degre": 10, "find_region": 10, "yield": 10, "children": 10, "grei": [10, 14], "mark": [10, 14], "fill": 10, "less": 10, "200": [10, 12], "shown": 10, "black": [10, 14], "cube": 10, "variou": 10, "format": [10, 12, 16], "validrespons": [10, 12], "input_spec": 10, "valid_spec": 10, "respons": [10, 12], "model": 10, "pointsformat": 10, "qualnam": 10, "boundari": 10, "enum": 10, "pointsrequest": 10, "max_fram": [10, 16], "100000": 10, "float_list": [10, 16], "request": [10, 11, 12, 16], "generatedpointsrespons": 10, "total_fram": [10, 16], "total": 10, "returned_fram": [10, 16], "due": 10, "downsampl": 10, "etc": 10, "boundsrespons": [10, 12], "gaprespons": [10, 12], "boolean": 10, "presenc": 10, "smalleststeprespons": [10, 12], "absolut": [10, 12], "smallest": [10, 12], "distanc": 10, "per_axi": 10, "about": 10, "bodi": 10, "ellipsi": 10, "jsonrespons": 10, "wether": [10, 12], "viabl": [10, 12], "canon": [10, 12], "error": [10, 12, 16], "middl": [10, 12, 16], "info": [10, 12], "correspond": [10, 12], "smallest_step": 10, "ignor": [10, 12], "run_app": 10, "cor": [10, 16], "port": 10, "8080": [10, 16], "applic": [10, 16], "scanspec_schema_text": 10, "openapi": [10, 16], "schema": 10, "string": 10, "welcom": 11, "pull": 11, "handl": 11, "pleas": 11, "exist": [11, 15], "befor": 11, "file": 11, "great": 11, "idea": 11, "involv": 11, "big": 11, "ticket": 11, "sure": 11, "don": 11, "your": 11, "might": [11, 14], "scope": 11, "offer": 11, "place": 11, "ask": 11, "question": 11, "open": [11, 16], "obviou": 11, "close": 11, "rais": 11, "doe": 11, "librari": 11, "bug": 11, "free": 11, "significantli": 11, "reduc": 11, "easili": 11, "caught": 11, "remain": 11, "improv": 11, "environ": 11, "test": 11, "standard": 11, "follow": [11, 14], "endpoint": [12, 16], "post": [12, 16], "arg": 12, "statu": 12, "ok": 12, "success": 12, "422": [12, 16], "unprocess": 12, "entiti": 12, "smalleststep": 12, "increas": 14, "complex": 14, "ll": 14, "enter": 14, "interact": 14, "python": 14, "termin": [14, 15, 16], "graph": 14, "dot": 14, "arrowhead": 14, "cross": 14, "quickli": 14, "client": [14, 16], "evalu": 14, "ad": 14, "program": 14, "disjoint": 14, "guarante": 14, "appli": 14, "demonstr": 14, "read": 14, "system": 14, "send": [14, 16], "python3": 15, "recommend": 15, "interfer": 15, "softwar": 15, "m": 15, "venv": 15, "bin": 15, "now": [15, 16], "featur": 15, "current": 15, "git": 15, "com": 15, "commandlin": [15, 16], "interfac": 15, "been": 15, "nice": 16, "util": 16, "expos": 16, "those": 16, "web": 16, "gui": 16, "bring": 16, "compat": 16, "localhost": 16, "press": 16, "ctrl": 16, "c": 16, "quit": 16, "browser": 16, "doc": 16, "swagger": 16, "ui": 16, "editor": 16, "curl": 16, "command": 16, "ensur": 16, "h": 16, "accept": 16, "content": 16, "becaus": 16, "miss": 16, "sever": 16, "inspect": 16, "organis": 16, "1024": 16, "333333333333333": 16, "666666666666667": 16, "000000000000002": 16}, "objects": {"": [[12, 0, 1, "post--bounds", "/bounds"], [12, 0, 1, "post--gap", "/gap"], [12, 0, 1, "post--midpoints", "/midpoints"], [12, 0, 1, "post--smalleststep", "/smalleststep"], [12, 0, 1, "post--valid", "/valid"], [10, 1, 0, "-", "scanspec"]], "scanspec": [[10, 1, 0, "-", "core"], [10, 1, 0, "-", "plot"], [10, 1, 0, "-", "regions"], [10, 1, 0, "-", "service"], [10, 1, 0, "-", "specs"]], "scanspec.core": [[10, 2, 1, "", "AxesPoints"], [10, 3, 1, "", "Axis"], [10, 3, 1, "", "Frames"], [10, 3, 1, "", "Midpoints"], [10, 3, 1, "", "Path"], [10, 3, 1, "", "SnakedFrames"], [10, 3, 1, "", "StrictConfig"], [10, 7, 1, "", "discriminated_union_of_subclasses"], [10, 7, 1, "", "gap_between_frames"], [10, 7, 1, "", "if_instance_do"], [10, 7, 1, "", "squash_frames"]], "scanspec.core.Frames": [[10, 4, 1, "", "axes"], [10, 4, 1, "", "concat"], [10, 4, 1, "", "extract"], [10, 5, 1, "", "gap"], [10, 5, 1, "", "lower"], [10, 5, 1, "", "midpoints"], [10, 5, 1, "", "upper"], [10, 4, 1, "", "zip"]], "scanspec.core.Midpoints": [[10, 6, 1, "", "axes"], [10, 5, 1, "", "stack"]], "scanspec.core.Path": [[10, 4, 1, "", "consume"], [10, 5, 1, "", "end_index"], [10, 5, 1, "", "index"], [10, 5, 1, "", "lengths"], [10, 5, 1, "", "stack"]], "scanspec.core.SnakedFrames": [[10, 4, 1, "", "extract"], [10, 4, 1, "", "from_frames"]], "scanspec.plot": [[10, 7, 1, "", "plot_spec"]], "scanspec.regions": [[10, 3, 1, "", "Circle"], [10, 3, 1, "", "CombinationOf"], [10, 3, 1, "", "DifferenceOf"], [10, 3, 1, "", "Ellipse"], [10, 3, 1, "", "IntersectionOf"], [10, 3, 1, "", "Polygon"], [10, 3, 1, "", "Range"], [10, 3, 1, "", "Rectangle"], [10, 3, 1, "", "Region"], [10, 3, 1, "", "SymmetricDifferenceOf"], [10, 3, 1, "", "UnionOf"], [10, 7, 1, "", "find_regions"], [10, 7, 1, "", "get_mask"]], "scanspec.regions.Region": [[10, 4, 1, "", "axis_sets"], [10, 4, 1, "", "mask"]], "scanspec.scanspec": [[10, 2, 1, "", "__version__"]], "scanspec.service": [[10, 3, 1, "", "BoundsResponse"], [10, 3, 1, "", "GapResponse"], [10, 3, 1, "", "GeneratedPointsResponse"], [10, 3, 1, "", "MidpointsResponse"], [10, 2, 1, "", "Points"], [10, 3, 1, "", "PointsFormat"], [10, 3, 1, "", "PointsRequest"], [10, 3, 1, "", "SmallestStepResponse"], [10, 3, 1, "", "ValidResponse"], [10, 7, 1, "", "bounds"], [10, 7, 1, "", "gap"], [10, 7, 1, "", "midpoints"], [10, 7, 1, "", "run_app"], [10, 7, 1, "", "scanspec_schema_text"], [10, 7, 1, "", "smallest_step"], [10, 7, 1, "", "valid"]], "scanspec.specs": [[10, 3, 1, "", "Concat"], [10, 2, 1, "", "DURATION"], [10, 3, 1, "", "Line"], [10, 3, 1, "", "Mask"], [10, 3, 1, "", "Product"], [10, 3, 1, "", "Repeat"], [10, 3, 1, "", "Snake"], [10, 3, 1, "", "Spec"], [10, 3, 1, "", "Spiral"], [10, 3, 1, "", "Squash"], [10, 3, 1, "", "Static"], [10, 3, 1, "", "Zip"], [10, 7, 1, "", "fly"], [10, 7, 1, "", "step"]], "scanspec.specs.Line": [[10, 4, 1, "", "bounded"]], "scanspec.specs.Spec": [[10, 4, 1, "", "axes"], [10, 4, 1, "", "calculate"], [10, 4, 1, "", "concat"], [10, 4, 1, "", "deserialize"], [10, 4, 1, "", "frames"], [10, 4, 1, "", "midpoints"], [10, 4, 1, "", "serialize"], [10, 4, 1, "", "shape"], [10, 4, 1, "", "zip"]], "scanspec.specs.Spiral": [[10, 4, 1, "", "spaced"]], "scanspec.specs.Static": [[10, 4, 1, "", "duration"]]}, "objtypes": {"0": "http:post", "1": "py:module", "2": "py:data", "3": "py:class", "4": "py:method", "5": "py:attribute", "6": "py:property", "7": "py:function"}, "objnames": {"0": ["http", "post", "HTTP post"], "1": ["py", "module", "Python module"], "2": ["py", "data", "Python data"], "3": ["py", "class", "Python class"], "4": ["py", "method", "Python method"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "property", "Python property"], "7": ["py", "function", "Python function"]}, "titleterms": {"explan": 0, "technic": 1, "term": 1, "axi": [1, 2], "point": [1, 6, 16], "frame": [1, 2, 3], "stack": [1, 3], "path": [1, 2], "why": [2, 3], "squash": [2, 3], "mask": [2, 14], "can": 2, "chang": 2, "unsnak": 2, "snake": [2, 14], "odd": 2, "length": 2, "thi": [2, 3], "matter": 2, "creat": [3, 14, 15], "an": 3, "exampl": 3, "them": 3, "flat": 3, "sequenc": 3, "what": 3, "about": 3, "region": [3, 10, 14], "how": [3, 5, 6, 7, 8], "doe": 3, "relat": 3, "hdf5": 3, "dimens": 3, "index": 4, "guid": [5, 11], "iter": 6, "spec": [6, 7, 10, 14, 16], "If": 6, "you": 6, "onli": 6, "need": 6, "midpoint": [6, 16], "do": 6, "fly": 6, "scan": [6, 14], "want": 6, "most": 6, "perform": 6, "option": 6, "know": 6, "whether": 6, "i": [6, 8], "gap": 6, "between": 6, "serial": 7, "deseri": 7, "scanspec": [8, 10], "document": 8, "structur": 8, "refer": 9, "api": [10, 12], "core": 10, "plot": [10, 14], "servic": [10, 16], "contribut": 11, "project": 11, "issu": 11, "discuss": 11, "code": 11, "coverag": 11, "develop": 11, "rest": [12, 16], "tutori": 13, "line": 14, "from": 14, "commandlin": 14, "2": 14, "ax": 14, "grid": 14, "multipl": 14, "conclus": 14, "instal": 15, "check": 15, "your": 15, "version": 15, "python": 15, "virtual": 15, "environ": 15, "librari": 15, "run": 16, "gener": 16, "server": 16, "valid": 16}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Explanations": [[0, "explanations"]], "Technical Terms": [[1, "technical-terms"]], "Axis": [[1, "axis"]], "Point": [[1, "point"]], "Frame": [[1, "frame"]], "Stack of Frames": [[1, "stack-of-frames"]], "Path": [[1, "path"]], "Why Squash (and Mask) can change the Path": [[2, "why-squash-and-mask-can-change-the-path"]], "Squash unsnaked axis into a snaked Frames": [[2, "squash-unsnaked-axis-into-a-snaked-frames"]], "Squash snaked axis into unsnaked odd length axis": [[2, "squash-snaked-axis-into-unsnaked-odd-length-axis"]], "Why this matters": [[2, "why-this-matters"]], "Why create a stack of Frames?": [[3, "why-create-a-stack-of-frames"]], "An Example": [[3, "an-example"]], "Why not squash them into a flat sequence?": [[3, "why-not-squash-them-into-a-flat-sequence"]], "What about Regions?": [[3, "what-about-regions"]], "How does this stack relate to HDF5 Dimensions?": [[3, "how-does-this-stack-relate-to-hdf5-dimensions"]], "Index": [[4, "index"]], "How-to Guides": [[5, "how-to-guides"]], "How to Iterate a Spec": [[6, "how-to-iterate-a-spec"]], "If you only need the midpoints": [[6, "if-you-only-need-the-midpoints"]], "If you need to do a fly scan": [[6, "if-you-need-to-do-a-fly-scan"]], "If you want the most performant option": [[6, "if-you-want-the-most-performant-option"]], "If you need to know whether there is a gap between points": [[6, "if-you-need-to-know-whether-there-is-a-gap-between-points"]], "How to Serialize and Deserialize a Spec": [[7, "how-to-serialize-and-deserialize-a-spec"]], "How to Serialize": [[7, "how-to-serialize"]], "How to Deserialize": [[7, "how-to-deserialize"]], "scanspec": [[8, "scanspec"], [10, "scanspec"]], "How the documentation is structured": [[8, "how-the-documentation-is-structured"]], "Reference": [[9, "reference"]], "API": [[10, "module-scanspec"]], "scanspec.core": [[10, "scanspec-core"]], "scanspec.specs": [[10, "scanspec-specs"]], "scanspec.regions": [[10, "scanspec-regions"]], "scanspec.plot": [[10, "scanspec-plot"]], "scanspec.service": [[10, "scanspec-service"]], "Contributing to the project": [[11, "contributing-to-the-project"]], "Issue or Discussion?": [[11, "issue-or-discussion"]], "Code coverage": [[11, "code-coverage"]], "Developer guide": [[11, "developer-guide"]], "REST API": [[12, "rest-api"]], "Tutorials": [[13, "tutorials"]], "Creating a Scan Spec": [[14, "creating-a-scan-spec"]], "Line": [[14, "line"]], "Plotting from the commandline": [[14, "plotting-from-the-commandline"]], "Line with 2 axes": [[14, "line-with-2-axes"]], "Grid": [[14, "grid"]], "Snaked Grid": [[14, "snaked-grid"]], "Masking with Regions": [[14, "masking-with-regions"]], "Masking with Multiple Regions": [[14, "masking-with-multiple-regions"]], "Conclusion": [[14, "conclusion"]], "Installation": [[15, "installation"]], "Check your version of python": [[15, "check-your-version-of-python"]], "Create a virtual environment": [[15, "create-a-virtual-environment"]], "Installing the library": [[15, "installing-the-library"]], "Running a REST service for generating points": [[16, "running-a-rest-service-for-generating-points"]], "Running the server": [[16, "running-the-server"]], "Validating a Spec": [[16, "validating-a-spec"]], "Generating Midpoints": [[16, "generating-midpoints"]]}, "indexentries": {"axespoints (in module scanspec.core)": [[10, "scanspec.core.AxesPoints"]], "axis (class in scanspec.core)": [[10, "scanspec.core.Axis"]], "boundsresponse (class in scanspec.service)": [[10, "scanspec.service.BoundsResponse"]], "circle (class in scanspec.regions)": [[10, "scanspec.regions.Circle"]], "combinationof (class in scanspec.regions)": [[10, "scanspec.regions.CombinationOf"]], "concat (class in scanspec.specs)": [[10, "scanspec.specs.Concat"]], "duration (in module scanspec.specs)": [[10, "scanspec.specs.DURATION"]], "differenceof (class in scanspec.regions)": [[10, "scanspec.regions.DifferenceOf"]], "ellipse (class in scanspec.regions)": [[10, "scanspec.regions.Ellipse"]], "frames (class in scanspec.core)": [[10, "scanspec.core.Frames"]], "gapresponse (class in scanspec.service)": [[10, "scanspec.service.GapResponse"]], "generatedpointsresponse (class in scanspec.service)": [[10, "scanspec.service.GeneratedPointsResponse"]], "intersectionof (class in scanspec.regions)": [[10, "scanspec.regions.IntersectionOf"]], "line (class in scanspec.specs)": [[10, "scanspec.specs.Line"]], "mask (class in scanspec.specs)": [[10, "scanspec.specs.Mask"]], "midpoints (class in scanspec.core)": [[10, "scanspec.core.Midpoints"]], "midpointsresponse (class in scanspec.service)": [[10, "scanspec.service.MidpointsResponse"]], "path (class in scanspec.core)": [[10, "scanspec.core.Path"]], "points (in module scanspec.service)": [[10, "scanspec.service.Points"]], "pointsformat (class in scanspec.service)": [[10, "scanspec.service.PointsFormat"]], "pointsrequest (class in scanspec.service)": [[10, "scanspec.service.PointsRequest"]], "polygon (class in scanspec.regions)": [[10, "scanspec.regions.Polygon"]], "product (class in scanspec.specs)": [[10, "scanspec.specs.Product"]], "range (class in scanspec.regions)": [[10, "scanspec.regions.Range"]], "rectangle (class in scanspec.regions)": [[10, "scanspec.regions.Rectangle"]], "region (class in scanspec.regions)": [[10, "scanspec.regions.Region"]], "repeat (class in scanspec.specs)": [[10, "scanspec.specs.Repeat"]], "smalleststepresponse (class in scanspec.service)": [[10, "scanspec.service.SmallestStepResponse"]], "snake (class in scanspec.specs)": [[10, "scanspec.specs.Snake"]], "snakedframes (class in scanspec.core)": [[10, "scanspec.core.SnakedFrames"]], "spec (class in scanspec.specs)": [[10, "scanspec.specs.Spec"]], "spiral (class in scanspec.specs)": [[10, "scanspec.specs.Spiral"]], "squash (class in scanspec.specs)": [[10, "scanspec.specs.Squash"]], "static (class in scanspec.specs)": [[10, "scanspec.specs.Static"]], "strictconfig (class in scanspec.core)": [[10, "scanspec.core.StrictConfig"]], "symmetricdifferenceof (class in scanspec.regions)": [[10, "scanspec.regions.SymmetricDifferenceOf"]], "unionof (class in scanspec.regions)": [[10, "scanspec.regions.UnionOf"]], "validresponse (class in scanspec.service)": [[10, "scanspec.service.ValidResponse"]], "zip (class in scanspec.specs)": [[10, "scanspec.specs.Zip"]], "axes (scanspec.core.midpoints property)": [[10, "scanspec.core.Midpoints.axes"]], "axes() (scanspec.core.frames method)": [[10, "scanspec.core.Frames.axes"]], "axes() (scanspec.specs.spec method)": [[10, "scanspec.specs.Spec.axes"]], "axis_sets() (scanspec.regions.region method)": [[10, "scanspec.regions.Region.axis_sets"]], "bounded() (scanspec.specs.line class method)": [[10, "scanspec.specs.Line.bounded"]], "bounds() (in module scanspec.service)": [[10, "scanspec.service.bounds"]], "calculate() (scanspec.specs.spec method)": [[10, "scanspec.specs.Spec.calculate"]], "concat() (scanspec.core.frames method)": [[10, "scanspec.core.Frames.concat"]], "concat() (scanspec.specs.spec method)": [[10, "scanspec.specs.Spec.concat"]], "consume() (scanspec.core.path method)": [[10, "scanspec.core.Path.consume"]], "deserialize() (scanspec.specs.spec class method)": [[10, "scanspec.specs.Spec.deserialize"]], "discriminated_union_of_subclasses() (in module scanspec.core)": [[10, "scanspec.core.discriminated_union_of_subclasses"]], "duration() (scanspec.specs.static class method)": [[10, "scanspec.specs.Static.duration"]], "end_index (scanspec.core.path attribute)": [[10, "scanspec.core.Path.end_index"]], "extract() (scanspec.core.frames method)": [[10, "scanspec.core.Frames.extract"]], "extract() (scanspec.core.snakedframes method)": [[10, "scanspec.core.SnakedFrames.extract"]], "find_regions() (in module scanspec.regions)": [[10, "scanspec.regions.find_regions"]], "fly() (in module scanspec.specs)": [[10, "scanspec.specs.fly"]], "frames() (scanspec.specs.spec method)": [[10, "scanspec.specs.Spec.frames"]], "from_frames() (scanspec.core.snakedframes class method)": [[10, "scanspec.core.SnakedFrames.from_frames"]], "gap (scanspec.core.frames attribute)": [[10, "scanspec.core.Frames.gap"]], "gap() (in module scanspec.service)": [[10, "scanspec.service.gap"]], "gap_between_frames() (in module scanspec.core)": [[10, "scanspec.core.gap_between_frames"]], "get_mask() (in module scanspec.regions)": [[10, "scanspec.regions.get_mask"]], "if_instance_do() (in module scanspec.core)": [[10, "scanspec.core.if_instance_do"]], "index (scanspec.core.path attribute)": [[10, "scanspec.core.Path.index"]], "lengths (scanspec.core.path attribute)": [[10, "scanspec.core.Path.lengths"]], "lower (scanspec.core.frames attribute)": [[10, "scanspec.core.Frames.lower"]], "mask() (scanspec.regions.region method)": [[10, "scanspec.regions.Region.mask"]], "midpoints (scanspec.core.frames attribute)": [[10, "scanspec.core.Frames.midpoints"]], "midpoints() (in module scanspec.service)": [[10, "scanspec.service.midpoints"]], "midpoints() (scanspec.specs.spec method)": [[10, "scanspec.specs.Spec.midpoints"]], "module": [[10, "module-scanspec"], [10, "module-scanspec.core"], [10, "module-scanspec.plot"], [10, "module-scanspec.regions"], [10, "module-scanspec.service"], [10, "module-scanspec.specs"]], "plot_spec() (in module scanspec.plot)": [[10, "scanspec.plot.plot_spec"]], "run_app() (in module scanspec.service)": [[10, "scanspec.service.run_app"]], "scanspec": [[10, "module-scanspec"]], "scanspec.__version__ (in module scanspec)": [[10, "scanspec.scanspec.__version__"]], "scanspec.core": [[10, "module-scanspec.core"]], "scanspec.plot": [[10, "module-scanspec.plot"]], "scanspec.regions": [[10, "module-scanspec.regions"]], "scanspec.service": [[10, "module-scanspec.service"]], "scanspec.specs": [[10, "module-scanspec.specs"]], "scanspec_schema_text() (in module scanspec.service)": [[10, "scanspec.service.scanspec_schema_text"]], "serialize() (scanspec.specs.spec method)": [[10, "scanspec.specs.Spec.serialize"]], "shape() (scanspec.specs.spec method)": [[10, "scanspec.specs.Spec.shape"]], "smallest_step() (in module scanspec.service)": [[10, "scanspec.service.smallest_step"]], "spaced() (scanspec.specs.spiral class method)": [[10, "scanspec.specs.Spiral.spaced"]], "squash_frames() (in module scanspec.core)": [[10, "scanspec.core.squash_frames"]], "stack (scanspec.core.midpoints attribute)": [[10, "scanspec.core.Midpoints.stack"]], "stack (scanspec.core.path attribute)": [[10, "scanspec.core.Path.stack"]], "step() (in module scanspec.specs)": [[10, "scanspec.specs.step"]], "upper (scanspec.core.frames attribute)": [[10, "scanspec.core.Frames.upper"]], "valid() (in module scanspec.service)": [[10, "scanspec.service.valid"]], "zip() (scanspec.core.frames method)": [[10, "scanspec.core.Frames.zip"]], "zip() (scanspec.specs.spec method)": [[10, "scanspec.specs.Spec.zip"]]}})